@using Invetker.Models
@model TransactionAddViewModel

<div class="modal fade" id="transaction-edit-modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="transaction-edit-modal" aria-hidden="true">
    <div class="modal-dialog modal-lg with-nav-tab">
        <div class="modal-content">
            <ul class="nav nav-tabs px-4" id="myTab" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="edit-tab" data-bs-toggle="tab" data-bs-target="#edit-tab-pane" type="button" role="tab" aria-controls="edit-tab-pane" aria-selected="true">Transaction Edit</button>
                </li>
            </ul>
            <div class="tab-content" id="myTabContent">
                <div class="tab-pane fade show active" id="edit-tab-pane" role="tabpanel" aria-labelledby="edit-tab" tabindex="0">
                    @using (Html.BeginForm("", "api/Transaction", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { name = "edit", role = "form", @class = "mt-3 needs-validation", novalidate = "true" }))
                    {
                        <div class="px-4">
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="mb-3">
                                @Html.LabelFor(m => m.AssetType, "Type", new { @class = "form-label required" })
                                @Html.DropDownListFor(
                                o => o.AssetType,
                                Enum.GetValues(typeof(AssetType)).Cast<AssetType>
                                    ().Select(x => new SelectListItem
                                        {
                                        Text = x.ToString(),
                                        Value = ((int)x).ToString(),
                                        Selected = x == AssetType.Stock
                                    }),
                                    new { @class = "form-control asset-type", required = "true", disabled = "true" }
                                )
                                @Html.ValidationMessageFor(m => m.AssetType, "", new { @class = "text-danger" })
                            </div>
                            <div class="mb-3">
                                <div class="control-group">
                                    @Html.LabelFor(m => m.AssetId, "Symbol", new { @class = "form-label required" })
                                    <input id="Ticker" class="Ticker form-control" name="AssetId" disabled required>
                                    @Html.ValidationMessageFor(m => m.AssetType, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="mb-3">
                                @Html.LabelFor(m => m.Quantity, new { @class = "form-label required" })
                                @Html.TextBoxFor(m => m.Quantity, new { @class = "form-control", type = "number", required = "true", step = "0.001" })
                                @Html.ValidationMessageFor(m => m.Quantity, "", new { @class = "text-danger" })
                            </div>
                            <div class="mb-3">
                                @Html.LabelFor(m => m.Action, new { @class = "form-label required" })
                                @Html.DropDownListFor(
                                    o => o.Action,
                                    Enum.GetValues(typeof(ActionType)).Cast<ActionType>().Select(x => new SelectListItem { Text = x.ToString(), Value = ((int)x).ToString() }),
                                    new { @class = "form-control", required = "true" }
                                )
                                @Html.ValidationMessageFor(m => m.Action, "", new { @class = "text-danger" })
                            </div>
                            <div class="mb-3">
                                @Html.LabelFor(m => m.Price, new { @class = "form-label required" })
                                @Html.TextBoxFor(m => m.Price, new { @class = "form-control", type = "number", required = "true", step = "0.001" })
                                @Html.ValidationMessageFor(m => m.Price, "", new { @class = "text-danger" })
                            </div>
                            <div class="mb-3">
                                @Html.LabelFor(m => m.Fee, new { @class = "form-label required" })
                                @Html.TextBoxFor(m => m.Fee, new { @class = "form-control", type = "number", required = "true", step = "0.001" })
                                @Html.ValidationMessageFor(m => m.Fee, "", new { @class = "text-danger" })
                            </div>
                            <div class="mb-3">
                                <label for="Datetime" class="form-label required">Date and Time:</label>
                                <input type="text" class="form-control" id="Datetime" name="Datetime" required>
                            </div>
                        </div>
                        <div class="modal-footer px-4">
                            <input type="button" value="Close" class="btn btn-outline-secondary" data-bs-dismiss="modal" />
                            <input type="submit" value="Edit" class="btn btn-warning text-light" />
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>