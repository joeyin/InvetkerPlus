@using Invetker.Models
@model TransactionsModels
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}
@section Styles {
    <link rel="stylesheet" href="~/Styles/dashboard/home.css" asp-append-version="true" />
}
@section Scripts {
    <script src="~/Scripts/dashboard/home.js" asp-append-version="true"></script>
}

<!-- Content start -->
<div class="d-inline-flex breadcrumb-wrapper align-items-center justify-content-between mb-4">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb mb-0">
            <li class="breadcrumb-item active" aria-current="page">Home</li>
        </ol>
    </nav>
</div>

<div class="container-fluid d-flex flex-grow-1 flex-column gap-4">
    
    <div id="holdings" class="card d-flex flex-column">
        <div class="title">Your Holdings</div>
        <div class="content table-thead-fixed flex-grow-1">
            <table class="table table-striped table-hover table-borderless table-thead-uppercase">
                <thead>
                    <tr>
                        <th scope="col">Ticker</th>
                        <th scope="col">Position</th>
                        <th scope="col">Price</th>
                        <th scope="col">Change %</th>
                        <th scope="col">Cost Basis</th>
                        <th scope="col">MKTVAL</th>
                        <th scope="col">AVG Price</th>
                        <th scope="col">Daily P&L</th>
                        <th scope="col">Unrealized P&L</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (HoldingViewModel holding in ViewData["Holdings"] as List<Invetker.Models.HoldingViewModel>)
                    {
                        <tr>
                            <td>@holding.Symbol</td>
                            <td>@String.Format("{0:#,##0.##}", holding.Position)</td>
                            <td>@String.Format("{0:#,##0.##}", holding.Price)</td>
                            <td>
                                <span class="@(holding.Change >= 0 ? "text-success" : "text-danger")">
                                    @(holding.Change >= 0? "+" : "")@String.Format("{0:#,##0.##}", holding.Change)%
                                </span>
                            </td>
                            <td>@String.Format("{0:#,##0.##}", holding.Amount)</td>
                            <td>@String.Format("{0:#,##0.##}", holding.MarketVal)</td>
                            <td>@String.Format("{0:#,##0.##}", holding.AvgPrice)</td>
                            <td>
                                <span class="@(holding.DailyPL >= 0 ? "text-success" : "text-danger")">
                                    @(holding.DailyPL >= 0? "+" : "")@String.Format("{0:#,##0.##}", holding.DailyPL)
                                </span>
                            </td>
                            <td>
                                <span class="@(holding.UnrealizedPL >= 0 ? "text-success" : "text-danger")">
                                    @(holding.UnrealizedPL >= 0? "+" : "")@String.Format("{0:#,##0.##}", holding.UnrealizedPL)
                                </span>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div id="transactions" class="card d-flex flex-column">
        <div class="title">Recent Transactions</div>
        <div class="content table-thead-fixed flex-grow-1">
            <table class="table table-striped table-hover table-borderless table-thead-uppercase">
                <thead>
                    <tr>
                        <th scope="col">Symbol</th>
                        <th scope="col">Action</th>
                        <th scope="col">Quantity</th>
                        <th scope="col">Price</th>
                        <th scope="col">Fee</th>
                        <th scope="col">Amount</th>
                        <th scope="col">Date Time</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (TransactionViewModel transaction in ViewData["Transactions"] as List<Invetker.Models.TransactionViewModel>)
                    {
                        <tr>
                            <td>@transaction.Symbol</td>
                            <td>@transaction.Action</td>
                            <td>@String.Format("{0:#,##0.##}", transaction.Quantity)</td>
                            <td>@String.Format("{0:#,##0.##}", transaction.Price)</td>
                            <td>@String.Format("{0:#,##0.##}", transaction.Fee)</td>
                            <td>@(@String.Format("{0:#,##0.##}", (@transaction.Price * @transaction.Quantity) + @transaction.Fee))</td>
                            <td>@transaction.DateTime</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div id="top-portfolio" class="card d-flex flex-column">
        <div class="title">Top Portfolio Positions</div>
        <div class="content flex-grow-1 d-flex overflow-auto">
            @foreach (TopPositionViewModel top in ViewData["TopHoldings"] as List<Invetker.Models.TopPositionViewModel>)
            {
                <div class="ranking d-flex align-items-end">
                    <div class="no d-flex flex-column align-self-baseline">Top <span>@top.No</span></div>
                    <img class="company-logo" alt="@top.Symbol" aria-label="@top.Symbol"
                         src="@top.Icon" />
                    <div class="company-detail d-flex flex-column">
                        <span class="name">@top.Symbol</span>
                        <span class="description">@top.Description</span>
                        <span>POSITION: @top.Position</span>
                        <span>PRICE: @top.Price</span>
                        <span>
                            DAILY P&L:
                            <span class="@(top.DailyPL >= 0 ? "text-success" : "text-danger")">
                                @(top.DailyPL >= 0? "+" : "")@String.Format("{0:#,##0.##}", top.DailyPL)
                            </span>
                        </span>
                        <span>
                            UNREALIZED P&L:
                            <span class="@(top.UnrealizedPL >= 0 ? "text-success" : "text-danger")">
                                @(top.UnrealizedPL >= 0? "+" : "")@String.Format("{0:#,##0.##}", top.UnrealizedPL)
                            </span>
                        </span>
                    </div>
                </div>
            }
        </div>
    </div>
</div>