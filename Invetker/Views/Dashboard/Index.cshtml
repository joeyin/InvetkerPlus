@using Invetker.Models
@model TransactionsModels
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}
@section Styles {
    <link rel="stylesheet" href="~/Styles/dashboard/home.css" asp-append-version="true" />
}
@section Scripts {
    <script src="https://code.highcharts.com/stock/highstock.js"></script>
    <script src="https://code.highcharts.com/modules/accessibility.js"></script>
    <script src="~/Scripts/dashboard/home.js" asp-append-version="true"></script>
}

<nav class="px-4 py-3 mb-4 breadcrumb" aria-label="breadcrumb">
    <ol class="breadcrumb mb-0">
        <li class="breadcrumb-item d-flex align-items-center gap-2">
            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 32 32">
                <path id="home" fill="#636566"
                      d="M16.612 2.214a1.01 1.01 0 0 0-1.242 0L1 13.419l1.243 1.572L4 13.621V26a2.004 2.004 0 0 0 2 2h20a2.004 2.004 0 0 0 2-2V13.63L29.757 15L31 13.428ZM18 26h-4v-8h4Zm2 0v-8a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v8H6V12.062l10-7.79l10 7.8V26Z" />
            </svg>
            Home
        </li>
    </ol>
</nav>

<main class="px-4 flex-grow-1 d-flex flex-column">
    <div class="d-flex flex-row mb-4 gap-4">
        <div id="net-liquidity" class="card-wrap position-relative">
            <div id="chart" class="w-100 h-100"></div>
            <div class="info position-absolute">
                <div class="title">Net Liquidity Value</div>
                <div class="value">CA $6,666.00</div>
            </div>
            <div class="status position-absolute">
                <div class="d-inline-flex align-items-center">
                    <div class="arrow-down me-3"></div>
                    <span class="changed text-danger">2.3</span>
                </div>
                <div class="notes">Compared to the previous trading day</div>
            </div>
        </div>
        <div id="portfolio-performance" class="card-wrap position-relative flex-grow-1">
            <div id="chart" class="w-100 h-100"></div>
            <div class="info position-absolute">
                <div class="title">
                    Portfolio Performance
                    <span class="text-secondary notes ms-5">Cumulative rate of return (All)</span>
                </div>
            </div>
        </div>
    </div>

    <div class="mb-4">
        <div id="holdings" class="card-wrap d-flex flex-column">
            <div class="title">Your Holdings</div>
            <div class="content table-thead-fixed flex-grow-1">
                <table class="table table-striped table-hover table-borderless table-thead-uppercase">
                    <thead>
                        <tr>
                            <th scope="col">Ticker</th>
                            <th scope="col">Position</th>
                            <th scope="col">Price</th>
                            <th scope="col">Change %</th>
                            <th scope="col">Cost Basis</th>
                            <th scope="col">MKTVAL</th>
                            <th scope="col">AVG Price</th>
                            <th scope="col">Daily P&L</th>
                            <th scope="col">Unrealized P&L</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (HoldingViewModel holding in ViewData["Holdings"] as List<Invetker.Models.HoldingViewModel>)
                        {
                            <tr>
                                <td>@holding.Symbol</td>
                                <td>@String.Format("{0:#,##0.##}", holding.Position)</td>
                                <td>@String.Format("{0:#,##0.##}", holding.Price)</td>
                                <td>
                                    <span class="@(holding.Change >= 0 ? "text-success" : "text-danger")">
                                        @(holding.Change >= 0? "+" : "")@String.Format("{0:#,##0.##}", holding.Change)%
                                    </span>
                                </td>
                                <td>@String.Format("{0:#,##0.##}", holding.Amount)</td>
                                <td>@String.Format("{0:#,##0.##}", holding.MarketVal)</td>
                                <td>@String.Format("{0:#,##0.##}", holding.AvgPrice)</td>
                                <td>
                                    <span class="@(holding.DailyPL >= 0 ? "text-success" : "text-danger")">
                                        @(holding.DailyPL >= 0? "+" : "")@String.Format("{0:#,##0.##}", holding.DailyPL)
                                    </span>
                                </td>
                                <td>
                                    <span class="@(holding.UnrealizedPL >= 0 ? "text-success" : "text-danger")">
                                        @(holding.UnrealizedPL >= 0? "+" : "")@String.Format("{0:#,##0.##}", holding.UnrealizedPL)
                                    </span>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="mb-4">
        <div id="transactions" class="card-wrap d-flex flex-column">
            <div class="title">Recent Transactions</div>
            <div class="content table-thead-fixed flex-grow-1">
                <table class="table table-striped table-hover table-borderless table-thead-uppercase">
                    <thead>
                        <tr>
                            <th scope="col">Symbol</th>
                            <th scope="col">Action</th>
                            <th scope="col">Quantity</th>
                            <th scope="col">Price</th>
                            <th scope="col">Fee</th>
                            <th scope="col">Amount</th>
                            <th scope="col">Date Time</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (TransactionViewModel transaction in ViewData["Transactions"] as List<Invetker.Models.TransactionViewModel>)
                        {
                            <tr>
                                <td>@transaction.Symbol</td>
                                <td>@transaction.Action</td>
                                <td>@String.Format("{0:#,##0.##}", transaction.Quantity)</td>
                                <td>@String.Format("{0:#,##0.##}", transaction.Price)</td>
                                <td>@String.Format("{0:#,##0.##}", transaction.Fee)</td>
                                <td>@(@String.Format("{0:#,##0.##}", (@transaction.Price * @transaction.Quantity) + @transaction.Fee))</td>
                                <td>@transaction.DateTime</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="mb-4">
        <div id="top-portfolio" class="card-wrap d-flex flex-column">
            <div class="title">Top Portfolio Positions</div>
            <div class="content flex-grow-1 d-flex overflow-auto">
                @foreach (TopPositionViewModel top in ViewData["TopHoldings"] as List<Invetker.Models.TopPositionViewModel>)
                {
                    <div class="ranking d-flex align-items-end">
                        <div class="no d-flex flex-column align-self-baseline">Top <span>@top.No</span></div>
                        <img class="company-logo" alt="@top.Symbol" aria-label="@top.Symbol"
                             src="@top.Icon" />
                        <div class="company-detail d-flex flex-column">
                            <span class="name">@top.Symbol</span>
                            <span class="description">@top.Description</span>
                            <span>POSITION: @top.Position</span>
                            <span>PRICE: @top.Price</span>
                            <span>
                                DAILY P&L:
                                <span class="@(top.DailyPL >= 0 ? "text-success" : "text-danger")">
                                    @(top.DailyPL >= 0? "+" : "")@String.Format("{0:#,##0.##}", top.DailyPL)
                                </span>
                            </span>
                            <span>
                                UNREALIZED P&L:
                                <span class="@(top.UnrealizedPL >= 0 ? "text-success" : "text-danger")">
                                    @(top.UnrealizedPL >= 0? "+" : "")@String.Format("{0:#,##0.##}", top.UnrealizedPL)
                                </span>
                            </span>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</main>
